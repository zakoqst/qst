<!DOCTYPE html>

     <html> 
      
     <head>
 <title>الدخول</title>

    <!-- <meta name="csrf-token" content="{{csrfToken}}"> -->

 
   </head>
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f8f8f8;
        margin: 0;
        padding: 0;
      }
     
      .container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transform: translateX(-31px) translateY(0px);
      }
     
      h2 {
        text-align: center;
        color: #333;
      }
     
      form {
        margin-top: 20px;
      }
     
      label {
        display: block;
        margin-bottom: 10px;
        color: #333;
        font-weight: bold;
      }
     
      input[type="text"] {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border-radius: 5px;
        border: 1px solid #ddd;
        outline: none;
      }
     
      input[type="submit"] {
        display: block;
        margin: 18px auto;
        padding: 10px 20px;
        font-size: 18px;
        background-color: #4caf50;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease-in-out;
      }
      input[type="submit"]:hover {
        background-color: #45a049;
      }
     
      .rate-section {
        margin-top: 20px;
      }
     
      .rating {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: row;
        font-size: 30px;
      }
     
      .rating input {
        display: none;
      }
     
      .rating label {
        color: #ddd;
        margin: 0 5px;
        cursor: pointer;
        transition: color 0.3s ease-in-out;
      }
     
      .rating input:checked ~ label,
      .rating input:hover ~ label {
        color: #ffca08; /* Color for the selected star */
      }
     
      .container img {
        display: inline-block;
        transform: translateX(218px) translateY(0px);
      }
     
      #question {
        transform: translateX(0px) translateY(3px) !important;
      }
     
      .container form p {
        text-align: center;
      }
     
      .container form h3 {
        text-align: center;
        position: relative;
        top: 6px;
      }
      /* Container */
      .container{
       transform:translatex(-12px) translatey(155px);
       border-width:1px;
       border-color:#a0a0a0;
       border-style:solid;
       margin-right:auto !important;
      }
     
      /* Label */
      .container form label{
       text-align:right;
       position:relative;
       left:-6px;
      }
.container h2 {
color: #333;
font-size: 24px;
margin-top: 20px;
margin-bottom: 10px;
}
.chat-container {
  display: flex;
  flex-direction: column;
  height: 300px; /* adjust the height as needed */
  border: 1px solid #ccc;
  border-radius: 4px;
  overflow-y: auto;
}

.message-container {
  flex: 1;
  padding: 10px;
  overflow-y: auto;
}

.input-container {
  display: flex;
  align-items: center;
  padding: 10px;
}

#message-input {
  flex: 1;
  height: 40px;
  border-radius: 4px;
  border: 1px solid #ccc;
  padding: 5px;
}

#send-button {
  margin-left: 10px;
  padding: 5px 10px;
  border-radius: 4px;
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
}


/* Message input */
#message-input{
 border-top-left-radius:30px;
 border-top-right-radius:30px;
 border-bottom-left-radius:30px;
 border-bottom-right-radius:30px;
 border-style:solid;
 border-color:#4a4343;
 text-align:center;
 transform:translatex(0px) translatey(0px);
 white-space:pre;
}

/* Send button */
#send-button{
 border-top-left-radius:30px;
 border-top-right-radius:30px;
 border-bottom-left-radius:30px;
 border-bottom-right-radius:30px;
 min-width:-10px;
 height:45px;
 width:45px;
 text-align:center;
 font-size:13px;
 font-style:normal;
 text-shadow:rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) -1px 0px 1px;
 column-count:-1;
 transform:translatex(-60px) translatey(0px);
 position:relative;
 left:2px;
 top:0px;
 background-color:#6a189a;
 box-shadow:0px 0px 0px -9px #302b2b;
}

/* Message container */
.container form .message-container{
 display:none;
}

/* Chat container */
.container form .chat-container{
 height:82px;
 background-color:transparent;
}


     
      </style>
    <!-- Add your head styles here -->
  </head>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.2.0/socket.io.js"></script>
  <body>
    <!-- Add the common HTML content for both templates -->
    <div class="container">
      <img src="images/student.webp" alt="Image" style="width: 150px; height: 150px;">
      <h2>إطرح سؤالك</h2>
      <form action="/submit" method="post" id="form">
        <label for="questionInput">أكتب سؤالك هنا</label>
        <div class="input-container">
          <textarea id="questionInput" name="question" placeholder="Enter your question"></textarea>
          <button type="submit" onclick="sendData(document.getElementById('form'))">Submit</button>
        </div>
      </form>
      
        <div class="rate-section">
          <h3>إعطي تقييما للأستاذ</h3>
          <p>Please provide your feedback by rating our service:</p>
          <div class="rating">
            <input type="radio" id="star5" name="rating" value="5" />
            <label for="star5">&#9733;</label>
    
            <input type="radio" id="star4" name="rating" value="4" />
            <label for="star4">&#9733;</label>
    
            <input type="radio" id="star3" name="rating" value="3" />
            <label for="star3">&#9733;</label>
    
            <input type="radio" id="star2" name="rating" value="2" />
            <label for="star2">&#9733;</label>
    
            <input type="radio" id="star1" name="rating" value="1" />
            <label for="star1">&#9733;</label>
            <!-- Add the remaining rating stars -->
          </div>
        </div>
      </form>
    
      <form action="/logout" method="post">
        <input type="submit" value="Logout">
      </form>
    
      <h2>Answer: <%= answer %></h2>
    </div>
    
    <div class="sidebar">
      <h2>Answers</h2>
      <ul>
        <h2>Answer: <%- answer %></h2>
        <div id="answerContainer"></div>
        <!-- Render the answers here -->
      </ul>
    </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    const socket = io();

socket.on('notification', (data) => {
  console.log(data.message);
  // Customize this part to display the notification on the client-side
  // For example, you can show a popup or update a notification panel
});
// Create a WebSocket connection to the server

// Wait for the WebSocket connection to open before calling the socket.on() method.
socket.addEventListener('open', () => {
  // Listen for notifications from the server
  socket.on('message', message => {
    // If the message is a notification for the current user, display it to the user
    if (message.startsWith('notify:' + req.session.username)) {
      // Display the notification to the user
    }
  });
});



function sendData(event) {
  const questionInput = document.getElementById('questionInput').value;

  // Get the form data
  const formData = new FormData(document.getElementById('form')); // Use the correct form ID

  // Send the form data using AJAX
  $.ajax({
    type: 'POST',
    url: '/submit',
    data: formData,
    processData: false,
    contentType: false,

    success: function(response) {
      // Handle the response from the server
      // You can update the page dynamically here
      document.getElementById('questionInput').value = ''; // Clear the input after successful submission
      console.log('Question submitted successfully');
    },

    error: function(error) {
      // Handle an error response from the server
      if (error.status === 400) {
        // The request body is invalid.
        console.log(error.responseJSON.error);
      } else {
        // A different error occurred.
        console.log(error);
      }
    }
  });
}

    const ratingInputs = document.querySelectorAll('.rating input');
    const labels = document.querySelectorAll('.rating label');

    ratingInputs.forEach((input, index) => {
      input.addEventListener('change', () => {
        resetColors();
        colorStars(index);
      });
    });

    function resetColors() {
      labels.forEach(label => {
        label.style.color = '#ddd';
      });
    }

    function colorStars(index) {
      for (let i = 0; i <= index; i++) {
        labels[i].style.color = '#ffca08';
      }
    }
    // Add your JavaScript code here
  </script>
  </body>
</html>
